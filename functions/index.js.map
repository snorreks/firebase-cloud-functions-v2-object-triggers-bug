{
  "version": 3,
  "sources": ["../node_modules/firebase-functions/lib/common/encoding.js", "../node_modules/firebase-functions/lib/config.js", "../node_modules/firebase-functions/lib/logger/common.js", "../node_modules/firebase-functions/lib/logger/index.js", "../node_modules/firebase-functions/lib/v2/params/types.js", "../node_modules/firebase-functions/lib/v2/params/index.js", "../node_modules/firebase-functions/lib/v2/options.js", "../node_modules/firebase-functions/lib/v2/providers/storage.js", "../src/index.ts"],
  "sourcesContent": ["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertInvoker = exports.serviceAccountFromShorthand = exports.convertIfPresent = exports.copyIfPresent = exports.durationFromSeconds = void 0;\n/** Get a google.protobuf.Duration for a number of seconds. */\nfunction durationFromSeconds(s) {\n    return `${s}s`;\n}\nexports.durationFromSeconds = durationFromSeconds;\n/**\n * Utility function to help copy fields from type A to B.\n * As a safety net, catches typos or fields that aren't named the same\n * in A and B, but cannot verify that both Src and Dest have the same type for the same field.\n */\nfunction copyIfPresent(dest, src, ...fields) {\n    if (!src) {\n        return;\n    }\n    for (const field of fields) {\n        if (!Object.prototype.hasOwnProperty.call(src, field)) {\n            continue;\n        }\n        dest[field] = src[field];\n    }\n}\nexports.copyIfPresent = copyIfPresent;\nfunction convertIfPresent(dest, src, destField, srcField, converter = (from) => {\n    return from;\n}) {\n    if (!src) {\n        return;\n    }\n    if (!Object.prototype.hasOwnProperty.call(src, srcField)) {\n        return;\n    }\n    dest[destField] = converter(src[srcField]);\n}\nexports.convertIfPresent = convertIfPresent;\nfunction serviceAccountFromShorthand(serviceAccount) {\n    if (serviceAccount === 'default') {\n        return null;\n    }\n    else if (serviceAccount.endsWith('@')) {\n        if (!process.env.GCLOUD_PROJECT) {\n            throw new Error(`Unable to determine email for service account '${serviceAccount}' because process.env.GCLOUD_PROJECT is not set.`);\n        }\n        return `${serviceAccount}${process.env.GCLOUD_PROJECT}.iam.gserviceaccount.com`;\n    }\n    else if (serviceAccount.includes('@')) {\n        return serviceAccount;\n    }\n    else {\n        throw new Error(`Invalid option for serviceAccount: '${serviceAccount}'. Valid options are 'default', a service account email, or '{serviceAccountName}@'`);\n    }\n}\nexports.serviceAccountFromShorthand = serviceAccountFromShorthand;\nfunction convertInvoker(invoker) {\n    if (typeof invoker === 'string') {\n        invoker = [invoker];\n    }\n    if (invoker.length === 0) {\n        throw new Error('Invalid option for invoker: Must be a non-empty array.');\n    }\n    if (invoker.find((inv) => inv.length === 0)) {\n        throw new Error('Invalid option for invoker: Must be a non-empty string.');\n    }\n    if (invoker.length > 1 &&\n        invoker.find((inv) => inv === 'public' || inv === 'private')) {\n        throw new Error(\"Invalid option for invoker: Cannot have 'public' or 'private' in an array of service accounts.\");\n    }\n    return invoker;\n}\nexports.convertInvoker = convertInvoker;\n", "\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.firebaseConfig = exports.firebaseConfigCache = exports.config = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nfunction config() {\n    // K_CONFIGURATION is only set in GCFv2\n    if (process.env.K_CONFIGURATION) {\n        throw new Error('functions.config() is no longer available in Cloud Functions for ' +\n            'Firebase v2. Please see the latest documentation for information ' +\n            'on how to transition to using environment variables');\n    }\n    if (typeof config.singleton === 'undefined') {\n        init();\n    }\n    return config.singleton;\n}\nexports.config = config;\n/**\n * Store and retrieve project configuration data such as third-party API\n * keys or other settings. You can set configuration values using the\n * Firebase CLI as described in\n * [Environment Configuration](/docs/functions/config-env).\n */\n(function (config) {\n})(config = exports.config || (exports.config = {}));\n/** @hidden */\nexports.firebaseConfigCache = null;\n/** @hidden */\nfunction firebaseConfig() {\n    if (exports.firebaseConfigCache) {\n        return exports.firebaseConfigCache;\n    }\n    let env = process.env.FIREBASE_CONFIG;\n    if (env) {\n        // Firebase Tools will always use a JSON blob in prod, but docs\n        // explicitly state that the user can set the env to a file:\n        // https://firebase.google.com/docs/admin/setup#initialize-without-parameters\n        if (!env.startsWith('{')) {\n            env = fs.readFileSync(path.join(process.env.PWD, env)).toString('utf8');\n        }\n        exports.firebaseConfigCache = JSON.parse(env);\n        return exports.firebaseConfigCache;\n    }\n    // Could have Runtime Config with Firebase in it as an ENV value.\n    try {\n        const config = JSON.parse(process.env.CLOUD_RUNTIME_CONFIG);\n        if (config.firebase) {\n            exports.firebaseConfigCache = config.firebase;\n            return exports.firebaseConfigCache;\n        }\n    }\n    catch (e) {\n        // Do nothing\n    }\n    // Could have Runtime Config with Firebase in it as an ENV location or default.\n    try {\n        const configPath = process.env.CLOUD_RUNTIME_CONFIG ||\n            path.join(process.cwd(), '.runtimeconfig.json');\n        const contents = fs.readFileSync(configPath);\n        const config = JSON.parse(contents.toString('utf8'));\n        if (config.firebase) {\n            exports.firebaseConfigCache = config.firebase;\n            return exports.firebaseConfigCache;\n        }\n    }\n    catch (e) {\n        // Do nothing\n    }\n    return null;\n}\nexports.firebaseConfig = firebaseConfig;\nfunction init() {\n    try {\n        const parsed = JSON.parse(process.env.CLOUD_RUNTIME_CONFIG);\n        delete parsed.firebase;\n        config.singleton = parsed;\n        return;\n    }\n    catch (e) {\n        // Do nothing\n    }\n    try {\n        const configPath = process.env.CLOUD_RUNTIME_CONFIG ||\n            path.join(process.cwd(), '.runtimeconfig.json');\n        const contents = fs.readFileSync(configPath);\n        const parsed = JSON.parse(contents.toString('utf8'));\n        delete parsed.firebase;\n        config.singleton = parsed;\n        return;\n    }\n    catch (e) {\n        // Do nothing\n    }\n    config.singleton = {};\n}\n", "\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UNPATCHED_CONSOLE = exports.CONSOLE_SEVERITY = exports.SUPPORTS_STRUCTURED_LOGS = void 0;\n// Determine if structured logs are supported (node >= 10). If something goes wrong,\n// assume no since unstructured is safer.\n/** @hidden */\nexports.SUPPORTS_STRUCTURED_LOGS = parseInt(((_c = (_b = (_a = process.versions) === null || _a === void 0 ? void 0 : _a.node) === null || _b === void 0 ? void 0 : _b.split('.')) === null || _c === void 0 ? void 0 : _c[0]) || '8', 10) >= 10;\n// Map LogSeverity types to their equivalent `console.*` method.\n/** @hidden */\nexports.CONSOLE_SEVERITY = {\n    DEBUG: 'debug',\n    INFO: 'info',\n    NOTICE: 'info',\n    WARNING: 'warn',\n    ERROR: 'error',\n    CRITICAL: 'error',\n    ALERT: 'error',\n    EMERGENCY: 'error',\n};\n// safely preserve unpatched console.* methods in case of compat require\n/** @hidden */\nexports.UNPATCHED_CONSOLE = {\n    debug: console.debug,\n    info: console.info,\n    log: console.log,\n    warn: console.warn,\n    error: console.error,\n};\n", "\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.error = exports.warn = exports.info = exports.log = exports.debug = exports.write = void 0;\nconst util_1 = require(\"util\");\nconst common_1 = require(\"./common\");\n/** @internal */\nfunction removeCircular(obj, refs = []) {\n    if (typeof obj !== 'object' || !obj) {\n        return obj;\n    }\n    // If the object defines its own toJSON, prefer that.\n    if (obj.toJSON) {\n        return obj.toJSON();\n    }\n    if (refs.includes(obj)) {\n        return '[Circular]';\n    }\n    else {\n        refs.push(obj);\n    }\n    let returnObj;\n    if (Array.isArray(obj)) {\n        returnObj = new Array(obj.length);\n    }\n    else {\n        returnObj = {};\n    }\n    for (const k in obj) {\n        if (refs.includes(obj[k])) {\n            returnObj[k] = '[Circular]';\n        }\n        else {\n            returnObj[k] = removeCircular(obj[k], refs);\n        }\n    }\n    return returnObj;\n}\n/**\n * Writes a `LogEntry` to `stdout`/`stderr` (depending on severity).\n * @param entry - The `LogEntry` including severity, message, and any additional structured metadata.\n * @public\n */\nfunction write(entry) {\n    if (common_1.SUPPORTS_STRUCTURED_LOGS) {\n        common_1.UNPATCHED_CONSOLE[common_1.CONSOLE_SEVERITY[entry.severity]](JSON.stringify(removeCircular(entry)));\n        return;\n    }\n    let message = entry.message || '';\n    const jsonPayload = {};\n    let jsonKeyCount = 0;\n    for (const k in entry) {\n        if (!['severity', 'message'].includes(k)) {\n            jsonKeyCount++;\n            jsonPayload[k] = entry[k];\n        }\n    }\n    if (jsonKeyCount > 0) {\n        message = `${message} ${JSON.stringify(removeCircular(jsonPayload), null, 2)}`;\n    }\n    common_1.UNPATCHED_CONSOLE[common_1.CONSOLE_SEVERITY[entry.severity]](message);\n}\nexports.write = write;\n/**\n * Writes a `DEBUG` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction debug(...args) {\n    write(entryFromArgs('DEBUG', args));\n}\nexports.debug = debug;\n/**\n * Writes an `INFO` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction log(...args) {\n    write(entryFromArgs('INFO', args));\n}\nexports.log = log;\n/**\n * Writes an `INFO` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction info(...args) {\n    write(entryFromArgs('INFO', args));\n}\nexports.info = info;\n/**\n * Writes a `WARNING` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction warn(...args) {\n    write(entryFromArgs('WARNING', args));\n}\nexports.warn = warn;\n/**\n * Writes an `ERROR` severity log. If the last argument provided is a plain object,\n * it is added to the `jsonPayload` in the Cloud Logging entry.\n * @param args - Arguments, concatenated into the log message with space separators.\n * @public\n */\nfunction error(...args) {\n    write(entryFromArgs('ERROR', args));\n}\nexports.error = error;\n/** @hidden */\nfunction entryFromArgs(severity, args) {\n    let entry = {};\n    const lastArg = args[args.length - 1];\n    if (lastArg && typeof lastArg == 'object' && lastArg.constructor == Object) {\n        entry = args.pop();\n    }\n    return Object.assign({}, entry, {\n        severity,\n        // mimic `console.*` behavior, see https://nodejs.org/api/console.html#console_console_log_data_args\n        message: util_1.format.apply(null, args),\n    });\n}\n", "\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListParam = exports.BooleanParam = exports.FloatParam = exports.IntParam = exports.StringParam = exports.SecretParam = exports.Param = exports.CompareExpression = exports.TernaryExpression = exports.Expression = void 0;\n/*\n * A CEL expression which can be evaluated during function deployment, and\n * resolved to a value of the generic type parameter: i.e, you can pass\n * an Expression<number> as the value of an option that normally accepts numbers.\n */\nclass Expression {\n    // Returns the Expression's runtime value, based on the CLI's resolution of params.\n    value() {\n        throw new Error('Not implemented');\n    }\n    // Returns the Expression's representation as a braced CEL expression.\n    toCEL() {\n        return `{{ ${this.toString()} }}`;\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nexports.Expression = Expression;\nfunction quoteIfString(literal) {\n    // TODO(vsfan@): CEL's string escape semantics are slightly different than Javascript's, what do we do here?\n    return typeof literal === 'string' ? `\"${literal}\"` : literal;\n}\n/**\n * A CEL expression corresponding to a ternary operator, e.g {{ cond ? ifTrue : ifFalse }}\n */\nclass TernaryExpression extends Expression {\n    constructor(test, ifTrue, ifFalse) {\n        super();\n        this.test = test;\n        this.ifTrue = ifTrue;\n        this.ifFalse = ifFalse;\n        this.ifTrue = ifTrue;\n        this.ifFalse = ifFalse;\n    }\n    value() {\n        return !!this.test.value ? this.ifTrue : this.ifFalse;\n    }\n    toString() {\n        return `${this.test} ? ${quoteIfString(this.ifTrue)} : ${quoteIfString(this.ifFalse)}`;\n    }\n}\nexports.TernaryExpression = TernaryExpression;\n/**\n * A CEL expression that evaluates to boolean true or false based on a comparison\n * between the value of another expression and a literal of that same type.\n */\nclass CompareExpression extends Expression {\n    constructor(cmp, lhs, rhs) {\n        super();\n        this.cmp = cmp;\n        this.lhs = lhs;\n        this.rhs = rhs;\n    }\n    value() {\n        const left = this.lhs.value();\n        switch (this.cmp) {\n            case '==':\n                return left === this.rhs;\n            case '>':\n                return left > this.rhs;\n            case '>=':\n                return left >= this.rhs;\n            case '<':\n                return left < this.rhs;\n            case '<=':\n                return left <= this.rhs;\n            default:\n                throw new Error('Unknown comparator ' + this.cmp);\n        }\n    }\n    toString() {\n        return `${this.lhs} ${this.cmp} ${quoteIfString(this.rhs)}`;\n    }\n    then(ifTrue, ifFalse) {\n        return new TernaryExpression(this, ifTrue, ifFalse);\n    }\n}\nexports.CompareExpression = CompareExpression;\nclass Param extends Expression {\n    constructor(name, options = {}) {\n        super();\n        this.name = name;\n        this.options = options;\n    }\n    value() {\n        throw new Error('Not implemented');\n    }\n    cmp(cmp, rhs) {\n        return new CompareExpression(cmp, this, rhs);\n    }\n    equals(rhs) {\n        return this.cmp('==', rhs);\n    }\n    toString() {\n        return `params.${this.name}`;\n    }\n    toSpec() {\n        const out = {\n            name: this.name,\n            ...this.options,\n            type: this.constructor.type,\n        };\n        return out;\n    }\n}\nexports.Param = Param;\nParam.type = 'string';\nclass SecretParam {\n    constructor(name) {\n        this.name = name;\n    }\n    value() {\n        return process.env[this.name] || '';\n    }\n    toSpec() {\n        return {\n            type: 'secret',\n            name: this.name,\n        };\n    }\n}\nexports.SecretParam = SecretParam;\nSecretParam.type = 'secret';\nclass StringParam extends Param {\n    value() {\n        return process.env[this.name] || '';\n    }\n}\nexports.StringParam = StringParam;\nclass IntParam extends Param {\n    value() {\n        return parseInt(process.env[this.name] || '0', 10) || 0;\n    }\n}\nexports.IntParam = IntParam;\nIntParam.type = 'int';\nclass FloatParam extends Param {\n    value() {\n        return parseFloat(process.env[this.name] || '0') || 0;\n    }\n}\nexports.FloatParam = FloatParam;\nFloatParam.type = 'float';\nclass BooleanParam extends Param {\n    value() {\n        return !!process.env[this.name];\n    }\n    then(ifTrue, ifFalse) {\n        return new TernaryExpression(this, ifTrue, ifFalse);\n    }\n}\nexports.BooleanParam = BooleanParam;\nBooleanParam.type = 'boolean';\nclass ListParam extends Param {\n    value() {\n        throw new Error('Not implemented');\n    }\n    toSpec() {\n        const out = {\n            name: this.name,\n            type: 'list',\n            ...this.options,\n        };\n        if (this.options.default && this.options.default.length > 0) {\n            out.default = this.options.default.join(',');\n        }\n        return out;\n    }\n}\nexports.ListParam = ListParam;\nListParam.type = 'list';\n", "\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineList = exports.defineFloat = exports.defineInt = exports.defineBoolean = exports.defineString = exports.defineSecret = exports.clearParams = exports.declaredParams = exports.Expression = void 0;\n/**\n * @hidden\n * @alpha\n */\nconst types_1 = require(\"./types\");\nObject.defineProperty(exports, \"Expression\", { enumerable: true, get: function () { return types_1.Expression; } });\nexports.declaredParams = [];\n/**\n * Use a helper to manage the list such that params are uniquely\n * registered once only but order is preserved.\n * @internal\n */\nfunction registerParam(param) {\n    for (let i = 0; i < exports.declaredParams.length; i++) {\n        if (exports.declaredParams[i].name === param.name) {\n            exports.declaredParams.splice(i, 1);\n        }\n    }\n    exports.declaredParams.push(param);\n}\n/**\n * For testing.\n * @internal\n */\nfunction clearParams() {\n    exports.declaredParams.splice(0, exports.declaredParams.length);\n}\nexports.clearParams = clearParams;\n/**\n * Declares a secret param, that will persist values only in Cloud Secret Manager.\n * Secrets are stored interally as bytestrings. Use ParamOptions.`as` to provide type\n * hinting during parameter resolution.\n *\n * @param name The name of the environment variable to use to load the param.\n * @param options Configuration options for the param.\n * @returns A Param with a `string` return type for `.value`.\n */\nfunction defineSecret(name) {\n    const param = new types_1.SecretParam(name);\n    registerParam(param);\n    return param;\n}\nexports.defineSecret = defineSecret;\n/**\n * Declare a string param.\n *\n * @param name The name of the environment variable to use to load the param.\n * @param options Configuration options for the param.\n * @returns A Param with a `string` return type for `.value`.\n */\nfunction defineString(name, options = {}) {\n    const param = new types_1.StringParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineString = defineString;\n/**\n * Declare a boolean param.\n *\n * @param name The name of the environment variable to use to load the param.\n * @param options Configuration options for the param.\n * @returns A Param with a `boolean` return type for `.value`.\n */\nfunction defineBoolean(name, options = {}) {\n    const param = new types_1.BooleanParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineBoolean = defineBoolean;\n/**\n * Declare an integer param.\n *\n * @param name The name of the environment variable to use to load the param.\n * @param options Configuration options for the param.\n * @returns A Param with a `number` return type for `.value`.\n */\nfunction defineInt(name, options = {}) {\n    const param = new types_1.IntParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineInt = defineInt;\n/**\n * Declare a float param.\n *\n * @param name The name of the environment variable to use to load the param.\n * @param options Configuration options for the param.\n * @returns A Param with a `number` return type for `.value`.\n */\nfunction defineFloat(name, options = {}) {\n    const param = new types_1.FloatParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineFloat = defineFloat;\n/**\n * Declare a list param (array of strings).\n *\n * @param name The name of the environment variable to use to load the param.\n * @param options Configuration options for the param.\n * @returns A Param with a `string[]` return type for `.value`.\n */\nfunction defineList(name, options = {}) {\n    const param = new types_1.ListParam(name, options);\n    registerParam(param);\n    return param;\n}\nexports.defineList = defineList;\n", "\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2021 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__getSpec = exports.optionsToEndpoint = exports.optionsToTriggerAnnotations = exports.getGlobalOptions = exports.setGlobalOptions = void 0;\n/**\n * Options to configure cloud functions.\n * @packageDocumentation\n */\nconst encoding_1 = require(\"../common/encoding\");\nconst logger = require(\"../logger\");\nconst params_1 = require(\"./params\");\nconst MemoryOptionToMB = {\n    '128MiB': 128,\n    '256MiB': 256,\n    '512MiB': 512,\n    '1GiB': 1024,\n    '2GiB': 2048,\n    '4GiB': 4096,\n    '8GiB': 8192,\n    '16GiB': 16384,\n    '32GiB': 32768,\n};\nlet globalOptions;\n/**\n * Sets default options for all functions written using the v2 SDK.\n * @param options Options to set as default\n */\nfunction setGlobalOptions(options) {\n    if (globalOptions) {\n        logger.warn('Calling setGlobalOptions twice leads to undefined behavior');\n    }\n    globalOptions = options;\n}\nexports.setGlobalOptions = setGlobalOptions;\n/**\n * Get the currently set default options.\n * Used only for trigger generation.\n * @internal\n */\nfunction getGlobalOptions() {\n    return globalOptions || {};\n}\nexports.getGlobalOptions = getGlobalOptions;\n/**\n * Apply GlobalOptions to trigger definitions.\n * @internal\n */\nfunction optionsToTriggerAnnotations(opts) {\n    const annotation = {};\n    (0, encoding_1.copyIfPresent)(annotation, opts, 'concurrency', 'minInstances', 'maxInstances', 'ingressSettings', 'labels', 'vpcConnector', 'vpcConnectorEgressSettings', 'secrets');\n    (0, encoding_1.convertIfPresent)(annotation, opts, 'availableMemoryMb', 'memory', (mem) => {\n        return typeof mem === 'object' ? mem : MemoryOptionToMB[mem];\n    });\n    (0, encoding_1.convertIfPresent)(annotation, opts, 'regions', 'region', (region) => {\n        if (typeof region === 'string') {\n            return [region];\n        }\n        return region;\n    });\n    (0, encoding_1.convertIfPresent)(annotation, opts, 'serviceAccountEmail', 'serviceAccount', encoding_1.serviceAccountFromShorthand);\n    (0, encoding_1.convertIfPresent)(annotation, opts, 'timeout', 'timeoutSeconds', encoding_1.durationFromSeconds);\n    (0, encoding_1.convertIfPresent)(annotation, opts, 'failurePolicy', 'retry', (retry) => {\n        return retry ? { retry: true } : null;\n    });\n    return annotation;\n}\nexports.optionsToTriggerAnnotations = optionsToTriggerAnnotations;\n/**\n * Apply GlobalOptions to endpoint manifest.\n * @internal\n */\nfunction optionsToEndpoint(opts) {\n    const endpoint = {};\n    (0, encoding_1.copyIfPresent)(endpoint, opts, 'concurrency', 'minInstances', 'maxInstances', 'ingressSettings', 'labels', 'timeoutSeconds', 'cpu');\n    (0, encoding_1.convertIfPresent)(endpoint, opts, 'serviceAccountEmail', 'serviceAccount');\n    if (opts.vpcConnector) {\n        const vpc = { connector: opts.vpcConnector };\n        (0, encoding_1.convertIfPresent)(vpc, opts, 'egressSettings', 'vpcConnectorEgressSettings');\n        endpoint.vpc = vpc;\n    }\n    (0, encoding_1.convertIfPresent)(endpoint, opts, 'availableMemoryMb', 'memory', (mem) => {\n        return typeof mem === 'object' ? mem : MemoryOptionToMB[mem];\n    });\n    (0, encoding_1.convertIfPresent)(endpoint, opts, 'region', 'region', (region) => {\n        if (typeof region === 'string') {\n            return [region];\n        }\n        return region;\n    });\n    (0, encoding_1.convertIfPresent)(endpoint, opts, 'secretEnvironmentVariables', 'secrets', (secrets) => secrets.map((secret) => ({ key: secret })));\n    return endpoint;\n}\nexports.optionsToEndpoint = optionsToEndpoint;\n/**\n * @hidden\n * @alpha\n */\nfunction __getSpec() {\n    return {\n        globalOptions: getGlobalOptions(),\n        params: params_1.declaredParams.map((p) => p.toSpec()),\n    };\n}\nexports.__getSpec = __getSpec;\n", "\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2022 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOptsAndBucket = exports.onOperation = exports.onObjectMetadataUpdated = exports.onObjectDeleted = exports.onObjectFinalized = exports.onObjectArchived = exports.metadataUpdatedEvent = exports.deletedEvent = exports.finalizedEvent = exports.archivedEvent = void 0;\n/**\n * Cloud functions to handle events from Google Cloud Storage.\n * @packageDocumentation\n */\nconst encoding_1 = require(\"../../common/encoding\");\nconst config_1 = require(\"../../config\");\nconst options = require(\"../options\");\n/** @internal */\nexports.archivedEvent = 'google.cloud.storage.object.v1.archived';\n/** @internal */\nexports.finalizedEvent = 'google.cloud.storage.object.v1.finalized';\n/** @internal */\nexports.deletedEvent = 'google.cloud.storage.object.v1.deleted';\n/** @internal */\nexports.metadataUpdatedEvent = 'google.cloud.storage.object.v1.metadataUpdated';\n/**\n * Event handler sent only when a bucket has enabled object versioning.\n * This event indicates that the live version of an object has become an\n * archived version, either because it was archived or because it was\n * overwritten by the upload of an object of the same name.\n *\n * @param bucketOrOptsOrHandler - Options or string that may (or may not) define the bucket to be used.\n * @param handler - Event handler which is run every time a Google Cloud Storage archival occurs.\n */\nfunction onObjectArchived(bucketOrOptsOrHandler, handler) {\n    return onOperation(exports.archivedEvent, bucketOrOptsOrHandler, handler);\n}\nexports.onObjectArchived = onObjectArchived;\n/**\n * Event handler which fires every time a Google Cloud Storage object\n * creation occurs.\n *\n * Sent when a new object (or a new generation of an existing object)\n * is successfully created in the bucket. This includes copying or rewriting\n * an existing object. A failed upload does not trigger this event.\n *\n * @param bucketOrOptsOrHandler - Options or string that may (or may not) define the bucket to be used.\n * @param handler - Event handler which is run every time a Google Cloud Storage object creation occurs.\n */\nfunction onObjectFinalized(bucketOrOptsOrHandler, handler) {\n    return onOperation(exports.finalizedEvent, bucketOrOptsOrHandler, handler);\n}\nexports.onObjectFinalized = onObjectFinalized;\n/**\n * Event handler which fires every time a Google Cloud Storage deletion occurs.\n *\n * Sent when an object has been permanently deleted. This includes objects\n * that are overwritten or are deleted as part of the bucket's lifecycle\n * configuration. For buckets with object versioning enabled, this is not\n * sent when an object is archived, even if archival occurs\n * via the `storage.objects.delete` method.\n *\n * @param bucketOrOptsOrHandler - Options or string that may (or may not) define the bucket to be used.\n * @param handler - Event handler which is run every time a Google Cloud Storage object deletion occurs.\n */\nfunction onObjectDeleted(bucketOrOptsOrHandler, handler) {\n    return onOperation(exports.deletedEvent, bucketOrOptsOrHandler, handler);\n}\nexports.onObjectDeleted = onObjectDeleted;\n/**\n * Event handler which fires every time the metadata of an existing object\n * changes.\n *\n * @param bucketOrOptsOrHandler - Options or string that may (or may not) define the bucket to be used.\n * @param handler - Event handler which is run every time a Google Cloud Storage object metadata update occurs.\n */\nfunction onObjectMetadataUpdated(bucketOrOptsOrHandler, handler) {\n    return onOperation(exports.metadataUpdatedEvent, bucketOrOptsOrHandler, handler);\n}\nexports.onObjectMetadataUpdated = onObjectMetadataUpdated;\n/** @internal */\nfunction onOperation(eventType, bucketOrOptsOrHandler, handler) {\n    if (typeof bucketOrOptsOrHandler === 'function') {\n        handler = bucketOrOptsOrHandler;\n        bucketOrOptsOrHandler = {};\n    }\n    const [opts, bucket] = getOptsAndBucket(bucketOrOptsOrHandler);\n    const func = (raw) => {\n        return handler(raw);\n    };\n    func.run = handler;\n    Object.defineProperty(func, '__trigger', {\n        get: () => {\n            const baseOpts = options.optionsToTriggerAnnotations(options.getGlobalOptions());\n            const specificOpts = options.optionsToTriggerAnnotations(opts);\n            return {\n                platform: 'gcfv2',\n                ...baseOpts,\n                ...specificOpts,\n                labels: {\n                    ...baseOpts === null || baseOpts === void 0 ? void 0 : baseOpts.labels,\n                    ...specificOpts === null || specificOpts === void 0 ? void 0 : specificOpts.labels,\n                },\n                eventTrigger: {\n                    eventType,\n                    resource: bucket, // TODO(colerogers): replace with 'bucket,' eventually\n                },\n            };\n        },\n    });\n    // TypeScript doesn't recognize defineProperty as adding a property and complains\n    // that __endpoint doesn't exist. We can either cast to any and lose all type safety\n    // or we can just assign a meaningless value before calling defineProperty.\n    func.__endpoint = {};\n    // SDK may attempt to read FIREBASE_CONFIG env var to fetch the default bucket name.\n    // To prevent runtime errors when FIREBASE_CONFIG env var is missing, we use getters.\n    Object.defineProperty(func, '__endpoint', {\n        get: () => {\n            const baseOpts = options.optionsToEndpoint(options.getGlobalOptions());\n            const specificOpts = options.optionsToEndpoint(opts);\n            const endpoint = {\n                platform: 'gcfv2',\n                ...baseOpts,\n                ...specificOpts,\n                labels: {\n                    ...baseOpts === null || baseOpts === void 0 ? void 0 : baseOpts.labels,\n                    ...specificOpts === null || specificOpts === void 0 ? void 0 : specificOpts.labels,\n                },\n                eventTrigger: {\n                    eventType,\n                    eventFilters: { bucket },\n                    retry: false,\n                },\n            };\n            (0, encoding_1.copyIfPresent)(endpoint.eventTrigger, opts, 'retry', 'retry');\n            return endpoint;\n        },\n    });\n    return func;\n}\nexports.onOperation = onOperation;\n/** @internal */\nfunction getOptsAndBucket(bucketOrOpts) {\n    var _a;\n    let bucket;\n    let opts;\n    if (typeof bucketOrOpts === 'string') {\n        bucket = bucketOrOpts;\n        opts = {};\n    }\n    else {\n        bucket = bucketOrOpts.bucket || ((_a = (0, config_1.firebaseConfig)()) === null || _a === void 0 ? void 0 : _a.storageBucket);\n        opts = { ...bucketOrOpts };\n        delete opts.bucket;\n    }\n    if (!bucket) {\n        throw new Error('Missing bucket name. If you are unit testing, please provide a bucket name' +\n            ' by providing bucket name directly in the event handler or by setting process.env.FIREBASE_CONFIG.');\n    }\n    if (!/^[a-z\\d][a-z\\d\\\\._-]{1,230}[a-z\\d]$/.test(bucket)) {\n        throw new Error(`Invalid bucket name ${bucket}`);\n    }\n    return [opts, bucket];\n}\nexports.getOptsAndBucket = getOptsAndBucket;\n", "import { onObjectFinalized } from \"firebase-functions/v2/storage\";\r\n\r\nexport const test = onObjectFinalized({region: 'europe-west1'},(event) => {\r\n  console.log(event);\r\n});\r\n"],
  "mappings": "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",
  "names": ["config", "test", "onObjectFinalized"]
}
